package friendgoods.vidic.com.generalframework;import android.app.Activity;import android.app.Application;import android.content.Context;import android.support.multidex.MultiDex;import android.util.Log;import com.lzy.okgo.OkGo;import com.lzy.okgo.cache.CacheEntity;import com.lzy.okgo.cache.CacheMode;import com.lzy.okgo.cookie.store.PersistentCookieStore;import com.lzy.okgo.model.HttpHeaders;import com.lzy.okgo.model.HttpParams;import java.util.ArrayList;import java.util.LinkedList;import java.util.List;import cn.jpush.android.api.JPushInterface;/** * Created by Administrator on 2016/10/9 0009. */public class MyApplication extends Application {    public static String registrationID="";    private static Context context;    //单例模式中获取唯一的MyApplication实例    private List<Activity> activityList = new LinkedList<Activity>();    private static MyApplication instance;    public static MyApplication getInstance() {        if(null == instance) {            instance = new MyApplication();        }        return instance;    }    //添加Activity到容器中    public void addActivity(Activity activity)  {        activityList.add(activity);    }    //遍历所有Activity并finish    public void exit(){        for(Activity activity:activityList) {            activity.finish();        }    }    public void removeactivity(Class<MainActivity> activity){        activityList.remove(activity);    }    // 获取到主线程的上下文    private static MyApplication mContext = null;    private static List<Activity> cacheActivity = new ArrayList<Activity>();    @Override    public void onCreate() {        super.onCreate();        this.mContext = this;        JPushInterface.setDebugMode(true); 	// 设置开启日志,发布时请关闭日志        JPushInterface.init(this);     		// 初始化 JPush        registrationID = JPushInterface.getRegistrationID(this);//        Log.e("测试id",registrationID+"****");    }    // 对外暴露上下文    public static MyApplication getApplication() {        return mContext;    }    public static void addCacheActivity(Activity ac){        if(ac != null){            cacheActivity.add(ac);        }    }    protected void attachBaseContext(Context base) {        super.attachBaseContext(base);        MultiDex.install(base);    }    public static Context getContext() {           return context;     }}